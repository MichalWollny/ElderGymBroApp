{"version":3,"sources":["../src/index.ts","../src/utils/index.ts","../src/utils/CollapseError.ts","../src/utils/useEvent.ts","../src/utils/useControlledState.ts","../src/utils/usePrefersReducedMotion.ts","../src/utils/useId.ts","../src/utils/setAnimationTimeout.ts"],"sourcesContent":["import {\n  useState,\n  useRef,\n  useEffect,\n  useLayoutEffect as useReactLayoutEffect,\n  CSSProperties,\n} from 'react'\nimport {\n  useId,\n  getElementHeight,\n  getAutoHeightDuration,\n  mergeRefs,\n  usePaddingWarning,\n  useControlledState,\n  useEvent,\n  usePrefersReducedMotion,\n  clearAnimationTimeout,\n  Frame,\n  AssignableRef,\n  setAnimationTimeout,\n} from './utils'\n\nconst useLayoutEffect =\n  typeof window === 'undefined' ? useEffect : useReactLayoutEffect\n\nexport interface UseCollapseInput {\n  /**\n   * If true, the collapsible element is expanded.\n   */\n  isExpanded?: boolean\n  /**\n   * If true, the collapsible element is expanded when it initially mounts.\n   * @default false\n   */\n  defaultExpanded?: boolean\n  /**\n   * Sets the height (Number) to which the elements collapses.\n   * @default 0\n   */\n  collapsedHeight?: number\n  /**\n   * Sets the transition-timing-function of the animation.\n   * @default 'cubic-bezier(0.4, 0, 0.2, 1)'\n   */\n  easing?: string\n  /**\n   * Sets the duration of the animation. If undefined, a 'natural' duration is\n   * calculated based on the distance of the animation.\n   */\n  duration?: number\n  /**\n   * If true, the animation is disabled. Overrides the hooks own logic for\n   * disabling the animation according to reduced motion preferences.\n   */\n  hasDisabledAnimation?: boolean\n  /**\n   * Handler called at each stage of the animation.\n   */\n  onTransitionStateChange?: (\n    state:\n      | 'expandStart'\n      | 'expandEnd'\n      | 'expanding'\n      | 'collapseStart'\n      | 'collapseEnd'\n      | 'collapsing'\n  ) => void\n  /**\n   * Unique identifier used to for associating elements appropriately for accessibility.\n   */\n  id?: string | number;\n}\n\nexport function useCollapse({\n  duration,\n  easing = 'cubic-bezier(0.4, 0, 0.2, 1)',\n  onTransitionStateChange: propOnTransitionStateChange = () => {},\n  isExpanded: configIsExpanded,\n  defaultExpanded = false,\n  hasDisabledAnimation,\n  id,\n  ...initialConfig\n}: UseCollapseInput = {}) {\n  const onTransitionStateChange = useEvent(propOnTransitionStateChange)\n  const uniqueId = useId(id ? `${id}` : undefined)\n\n  const [isExpanded, setExpanded] = useControlledState(\n    configIsExpanded,\n    defaultExpanded\n  )\n  const prevExpanded = useRef(isExpanded)\n  const [isAnimating, setIsAnimating] = useState(false)\n\n  const prefersReducedMotion = usePrefersReducedMotion()\n  const disableAnimation = hasDisabledAnimation ?? prefersReducedMotion\n\n  // Animation frames\n  const frameId = useRef<number>()\n  const endFrameId = useRef<Frame>()\n\n  // Collapse + toggle elements\n  const collapseElRef = useRef<HTMLElement | null>(null)\n  const [toggleEl, setToggleEl] = useState<HTMLElement | null>(null)\n\n  usePaddingWarning(collapseElRef)\n  const collapsedHeight = `${initialConfig.collapsedHeight || 0}px`\n\n  function setStyles<T extends Partial<CSSStyleDeclaration>>(newStyles: T) {\n    if (!collapseElRef.current) return\n    const target = collapseElRef.current\n\n    for (const property in newStyles) {\n      const value = newStyles[property]\n      if (value) {\n        target.style[property] = value\n      } else {\n        target.style.removeProperty(property)\n      }\n    }\n  }\n\n  useLayoutEffect(() => {\n    const collapse = collapseElRef.current\n    if (!collapse) return\n\n    if (isExpanded === prevExpanded.current) return\n    prevExpanded.current = isExpanded\n\n    function getDuration(height: number | string) {\n      if (disableAnimation) {\n        return 0\n      }\n      return duration ?? getAutoHeightDuration(height)\n    }\n\n    const getTransitionStyles = (height: number | string) =>\n      `height ${getDuration(height)}ms ${easing}`\n\n    const setTransitionEndTimeout = (duration: number) => {\n      function endTransition() {\n        if (isExpanded) {\n          setStyles({\n            height: '',\n            overflow: '',\n            transition: '',\n            display: '',\n          })\n          onTransitionStateChange('expandEnd')\n        } else {\n          setStyles({ transition: '' })\n          onTransitionStateChange('collapseEnd')\n        }\n        setIsAnimating(false)\n      }\n\n      if (endFrameId.current) {\n        clearAnimationTimeout(endFrameId.current)\n      }\n      endFrameId.current = setAnimationTimeout(endTransition, duration)\n    }\n\n    setIsAnimating(true)\n\n    if (isExpanded) {\n      frameId.current = requestAnimationFrame(() => {\n        onTransitionStateChange('expandStart')\n        setStyles({\n          display: 'block',\n          overflow: 'hidden',\n          height: collapsedHeight,\n        })\n        frameId.current = requestAnimationFrame(() => {\n          onTransitionStateChange('expanding')\n          const height = getElementHeight(collapseElRef)\n          setTransitionEndTimeout(getDuration(height))\n\n          if (collapseElRef.current) {\n            // Order is important! Setting directly.\n            collapseElRef.current.style.transition = getTransitionStyles(height)\n            collapseElRef.current.style.height = `${height}px`\n          }\n        })\n      })\n    } else {\n      frameId.current = requestAnimationFrame(() => {\n        onTransitionStateChange('collapseStart')\n        const height = getElementHeight(collapseElRef)\n        setTransitionEndTimeout(getDuration(height))\n        setStyles({\n          transition: getTransitionStyles(height),\n          height: `${height}px`,\n        })\n        frameId.current = requestAnimationFrame(() => {\n          onTransitionStateChange('collapsing')\n          setStyles({\n            height: collapsedHeight,\n            overflow: 'hidden',\n          })\n        })\n      })\n    }\n\n    return () => {\n      if (frameId.current) cancelAnimationFrame(frameId.current)\n      if (endFrameId.current) clearAnimationTimeout(endFrameId.current)\n    }\n  }, [\n    isExpanded,\n    collapsedHeight,\n    disableAnimation,\n    duration,\n    easing,\n    onTransitionStateChange,\n  ])\n\n  return {\n    isExpanded,\n    setExpanded,\n\n    getToggleProps<\n      Args extends {\n        onClick?: React.MouseEventHandler\n        disabled?: boolean\n        [k: string]: unknown\n      },\n      RefKey extends string | undefined = 'ref'\n    >(\n      args?: Args & {\n        /**\n         * Sets the key of the prop that the component uses for ref assignment\n         * @default 'ref'\n         */\n        refKey?: RefKey\n      }\n    ): { [K in RefKey extends string ? RefKey : 'ref']: AssignableRef<any> } & {\n      onClick: React.MouseEventHandler\n      id: string\n      'aria-controls': string\n      'aria-expanded'?: boolean\n      type?: 'button'\n      disabled?: boolean\n      'aria-disabled'?: boolean\n      role?: 'button'\n      tabIndex?: number\n    } {\n      const { disabled, onClick, refKey, ...rest } = {\n        refKey: 'ref',\n        onClick() {},\n        disabled: false,\n        ...args,\n      }\n\n      const isButton = toggleEl ? toggleEl.tagName === 'BUTTON' : undefined\n\n      const theirRef: any = args?.[refKey || 'ref']\n\n      const props: any = {\n        id: `react-collapsed-toggle-${uniqueId}`,\n        'aria-controls': `react-collapsed-panel-${uniqueId}`,\n        'aria-expanded': isExpanded,\n        onClick(evt: any) {\n          if (disabled) return\n          onClick?.(evt)\n          setExpanded((n) => !n)\n        },\n        [refKey || 'ref']: mergeRefs(theirRef, setToggleEl),\n      }\n\n      const buttonProps = {\n        type: 'button',\n        disabled: disabled ? true : undefined,\n      }\n      const fakeButtonProps = {\n        'aria-disabled': disabled ? true : undefined,\n        role: 'button',\n        tabIndex: disabled ? -1 : 0,\n      }\n\n      if (isButton === false) {\n        return { ...props, ...fakeButtonProps, ...rest }\n      } else if (isButton === true) {\n        return { ...props, ...buttonProps, ...rest }\n      } else {\n        return {\n          ...props,\n          ...buttonProps,\n          ...fakeButtonProps,\n          ...rest\n        }\n      }\n    },\n\n    getCollapseProps<\n      Args extends { style?: CSSProperties; [k: string]: unknown },\n      RefKey extends string | undefined = 'ref'\n    >(\n      args?: Args & {\n        /**\n         * Sets the key of the prop that the component uses for ref assignment\n         * @default 'ref'\n         */\n        refKey?: RefKey\n      }\n    ): {\n      [K in RefKey extends string ? RefKey : 'ref']: AssignableRef<any>\n    } & {\n      id: string\n      'aria-hidden': boolean\n      role: string\n      style: CSSProperties\n    } {\n      const { style, refKey } = { refKey: 'ref', style: {}, ...args }\n      const theirRef: any = args?.[refKey || 'ref']\n      return {\n        id: `react-collapsed-panel-${uniqueId}`,\n        'aria-hidden': !isExpanded,\n        'aria-labelledby': `react-collapsed-toggle-${uniqueId}`,\n        role: 'region',\n        ...args,\n        [refKey || 'ref']: mergeRefs(collapseElRef, theirRef),\n        style: {\n          boxSizing: 'border-box',\n          ...(!isAnimating && !isExpanded\n            ? {\n                // collapsed and not animating\n                display: collapsedHeight === '0px' ? 'none' : 'block',\n                height: collapsedHeight,\n                overflow: 'hidden',\n              }\n            : {}),\n          // additional styles passed, e.g. getCollapseProps({style: {}})\n          ...style,\n        },\n      } as any\n    },\n  }\n}\n","import { MutableRefObject, RefObject, useEffect } from 'react'\nimport { CollapseError, warning } from './CollapseError'\n\nexport { useEvent } from './useEvent'\nexport { useControlledState } from './useControlledState'\nexport { usePrefersReducedMotion } from './usePrefersReducedMotion'\nexport { useId } from './useId'\nexport * from './setAnimationTimeout'\n\n/**\n * React.Ref uses the readonly type `React.RefObject` instead of\n * `React.MutableRefObject`, We pretty much always assume ref objects are\n * mutable (at least when we create them), so this type is a workaround so some\n * of the weird mechanics of using refs with TS.\n */\nexport type AssignableRef<ValueType> =\n  | {\n      bivarianceHack(instance: ValueType | null): void\n    }['bivarianceHack']\n  | MutableRefObject<ValueType | null>\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nexport const noop = (): void => {}\n\nexport function getElementHeight(el: RefObject<HTMLElement>): number {\n  if (!el?.current) {\n    warning(\n      true,\n      `Was not able to find a ref to the collapse element via \\`getCollapseProps\\`. Ensure that the element exposes its \\`ref\\` prop. If it exposes the ref prop under a different name (like \\`innerRef\\`), use the \\`refKey\\` property to change it. Example:\n\nconst collapseProps = getCollapseProps({refKey: 'innerRef'})`\n    )\n    return 0\n  }\n  // scrollHeight will give us the height of the element, even if it's not visible.\n  // clientHeight, offsetHeight, nor getBoundingClientRect().height will do so\n  return el.current.scrollHeight\n}\n\n// https://github.com/mui-org/material-ui/blob/da362266f7c137bf671d7e8c44c84ad5cfc0e9e2/packages/material-ui/src/styles/transitions.js#L89-L98\nexport function getAutoHeightDuration(height: number | string): number {\n  if (!height || typeof height === 'string') {\n    return 0\n  }\n\n  const constant = height / 36\n\n  // https://www.wolframalpha.com/input/?i=(4+%2B+15+*+(x+%2F+36+)+**+0.25+%2B+(x+%2F+36)+%2F+5)+*+10\n  return Math.round((4 + 15 * constant ** 0.25 + constant / 5) * 10)\n}\n\nexport function assignRef<RefValueType = any>(\n  ref: AssignableRef<RefValueType> | null | undefined,\n  value: any\n) {\n  if (ref == null) return\n  if (typeof ref === 'function') {\n    ref(value)\n  } else {\n    try {\n      ref.current = value\n    } catch (error) {\n      throw new CollapseError(`Cannot assign value \"${value}\" to ref \"${ref}\"`)\n    }\n  }\n}\n\n/**\n * Passes or assigns a value to multiple refs (typically a DOM node). Useful for\n * dealing with components that need an explicit ref for DOM calculations but\n * also forwards refs assigned by an app.\n *\n * @param refs Refs to fork\n */\nexport function mergeRefs<RefValueType = any>(\n  ...refs: (AssignableRef<RefValueType> | null | undefined)[]\n) {\n  if (refs.every((ref) => ref == null)) {\n    return null\n  }\n  return (node: any) => {\n    refs.forEach((ref) => {\n      assignRef(ref, node)\n    })\n  }\n}\n\nexport function usePaddingWarning(element: RefObject<HTMLElement>): void {\n  // @ts-expect-error we do use it in dev\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  let warn = (el?: RefObject<HTMLElement>): void => {}\n\n  if (process.env.NODE_ENV !== 'production') {\n    warn = (el) => {\n      if (!el?.current) {\n        return\n      }\n      const { paddingTop, paddingBottom } = window.getComputedStyle(el.current)\n      const hasPadding =\n        (paddingTop && paddingTop !== '0px') ||\n        (paddingBottom && paddingBottom !== '0px')\n\n      warning(\n        !hasPadding,\n        `Padding applied to the collapse element will cause the animation to break and not perform as expected. To fix, apply equivalent padding to the direct descendent of the collapse element. Example:\n\nBefore:   <div {...getCollapseProps({style: {padding: 10}})}>{children}</div>\n\nAfter:   <div {...getCollapseProps()}>\n             <div style={{padding: 10}}>\n                 {children}\n             </div>\n          </div>`\n      )\n    }\n  }\n\n  useEffect(() => {\n    warn(element)\n  }, [element])\n}\n","import warning from 'tiny-warning'\n\nexport class CollapseError extends Error {\n  constructor(message: string) {\n    super(`react-collapsed: ${message}`)\n  }\n}\n\nconst collapseWarning = (...args: Parameters<typeof warning>) => {\n  return warning(args[0], `[react-collapsed] -- ${args[1]}`)\n}\n\nexport { collapseWarning as warning }\n","import { useRef, useEffect, useCallback } from 'react'\n\nexport function useEvent<T extends (...args: any[]) => any>(callback?: T) {\n  const ref = useRef<T | undefined>(callback)\n\n  useEffect(() => {\n    ref.current = callback\n  })\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return useCallback(((...args: any) => ref.current?.(...args)) as T, [])\n}\n","import { useState, useRef, useCallback, useEffect } from 'react'\nimport { warning } from './CollapseError'\nimport { useEvent } from './useEvent'\n\nexport function useControlledState<T>(\n  value: T | undefined,\n  defaultValue: T | undefined,\n  callback?: (value: T) => void\n): [T, (update: T | ((value: T) => T)) => void] {\n  const [state, setState] = useState<T>(defaultValue as T)\n  const initiallyControlled = useRef(typeof value !== 'undefined')\n  const effectiveValue = initiallyControlled.current ? value : state\n  const cb = useEvent(callback)\n\n  const onChange = useCallback(\n    (update: React.SetStateAction<T>) => {\n      const setter = update as (value?: T) => T\n      const newValue =\n        typeof update === 'function' ? setter(effectiveValue) : update\n\n      if (!initiallyControlled.current) {\n        setState(newValue)\n      }\n\n      cb?.(newValue)\n    },\n    [cb, effectiveValue]\n  )\n\n  useEffect(() => {\n    warning(\n      !(initiallyControlled.current && value == null),\n      '`isExpanded` state is changing from controlled to uncontrolled. useCollapse should not switch from controlled to uncontrolled (or vice versa). Decide between using a controlled or uncontrolled collapse for the lifetime of the component. Check the `isExpanded` prop.'\n    )\n    warning(\n      !(!initiallyControlled.current && value != null),\n      '`isExpanded` state is changing from uncontrolled to controlled. useCollapse should not switch from uncontrolled to controlled (or vice versa). Decide between using a controlled or uncontrolled collapse for the lifetime of the component. Check the `isExpanded` prop.'\n    )\n  }, [value])\n\n  return [effectiveValue as T, onChange]\n}\n","import { useState, useEffect } from 'react'\n\nconst QUERY = '(prefers-reduced-motion: reduce)'\n\nexport function usePrefersReducedMotion() {\n  const [prefersReducedMotion, setPrefersReducedMotion] = useState(false)\n\n  useEffect(() => {\n    if (typeof window === 'undefined' || typeof window.matchMedia !== 'function') {\n      return\n    }\n\n    const mediaQueryList = window.matchMedia(QUERY)\n    // Set the true initial value, now that we're on the client:\n    setPrefersReducedMotion(mediaQueryList.matches)\n\n    const listener = (event: MediaQueryListEvent) => {\n      setPrefersReducedMotion(event.matches)\n    }\n\n    // Fallback to addListener/removeListener for older browsers, #152\n    if (mediaQueryList.addEventListener) {\n      mediaQueryList.addEventListener('change', listener)\n      return () => {\n        mediaQueryList.removeEventListener('change', listener)\n      }\n    } else if (mediaQueryList.addListener) {\n      mediaQueryList.addListener(listener)\n      return () => {\n        mediaQueryList.removeListener(listener)\n      }\n    }\n    return undefined\n  }, [])\n  return prefersReducedMotion\n}\n","import * as React from 'react'\n\nconst __useId: () => string | undefined =\n  (React as any)['useId'.toString()] || (() => undefined)\n\nexport function useReactId() {\n  const id = __useId()\n  return id ?? ''\n}\n\n/**\n * Taken from Reach\n * https://github.com/reach/reach-ui/blob/d2b88c50caf52f473a7d20a4493e39e3c5e95b7b/packages/auto-id\n *\n * Autogenerate IDs to facilitate WAI-ARIA and server rendering.\n *\n * Note: The returned ID will initially be `null` and will update after a\n * component mounts. Users may need to supply their own ID if they need\n * consistent values for SSR.\n *\n * @see Docs https://reach.tech/auto-id\n */\nconst useIsomorphicLayoutEffect =\n  typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect\nlet serverHandoffComplete = false\nlet id = 0\nconst genId = () => ++id\nexport function useUniqueId(idFromProps?: string | null) {\n  /*\n   * If this instance isn't part of the initial render, we don't have to do the\n   * double render/patch-up dance. We can just generate the ID and return it.\n   */\n  const initialId = idFromProps || (serverHandoffComplete ? genId() : null)\n\n  const [id, setId] = React.useState(initialId)\n\n  useIsomorphicLayoutEffect(() => {\n    if (id === null) {\n      /*\n       * Patch the ID after render. We do this in `useLayoutEffect` to avoid any\n       * rendering flicker, though it'll make the first render slower (unlikely\n       * to matter, but you're welcome to measure your app and let us know if\n       * it's a problem).\n       */\n      setId(genId())\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  React.useEffect(() => {\n    if (serverHandoffComplete === false) {\n      /*\n       * Flag all future uses of `useId` to skip the update dance. This is in\n       * `useEffect` because it goes after `useLayoutEffect`, ensuring we don't\n       * accidentally bail out of the patch-up dance prematurely.\n       */\n      serverHandoffComplete = true\n    }\n  }, [])\n  return id != null ? String(id) : undefined\n}\n\nexport function useId(idOverride?: string): string | undefined {\n  const reactId = useReactId()\n  const uniqueId = useUniqueId(idOverride)\n\n  if (typeof idOverride === 'string') {\n    return idOverride\n  }\n\n  if (typeof reactId === 'string') {\n    return reactId\n  }\n\n  return uniqueId\n}\n","export type Frame = {\n  id?: number\n}\n\nexport function setAnimationTimeout(callback: () => void, timeout: number) {\n  const startTime = performance.now()\n  const frame: Frame = {}\n\n  function call() {\n    frame.id = requestAnimationFrame((now) => {\n      if (now - startTime > timeout) {\n        callback()\n      } else {\n        call()\n      }\n    })\n  }\n\n  call()\n  return frame\n}\n\nexport function clearAnimationTimeout(frame: Frame) {\n  if (frame.id) cancelAnimationFrame(frame.id)\n}\n"],"mappings":"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","names":["import_react","import_react","warning","import_react","import_react","id","useLayoutEffect","useReactLayoutEffect","id","duration","_a"]}